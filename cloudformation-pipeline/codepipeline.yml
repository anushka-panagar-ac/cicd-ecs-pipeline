AWSTemplateFormatVersion: '2010-09-09'
Description: CI/CD pipeline for ECS deployments

Parameters:
  SourceRepo:
    Type: String
    Description: GitHub repo info in the format 'owner/repo'
  Branch:
    Type: String
    Default: main
    Description: Branch to use for releases

Resources:
  PipelineBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal: { Service: codepipeline.amazonaws.com }
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub_Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              OutputArtifacts: [{ Name: SourceOutput }]
              Configuration:
                Owner: !Split [ '/', !Ref SourceRepo, 1 ]
                Repo: !Split [ '/', !Ref SourceRepo, 2 ]
                Branch: !Ref Branch
                OAuthToken: {{resolve:secretsmanager:GitHubOAuthToken:SecretString:token}}

        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts: [{ Name: SourceOutput }]
              OutputArtifacts: [{ Name: BuildOutput }]
              Configuration:
                ProjectName: !Ref BuildProject

        - Name: Approval
          Actions:
            - Name: ManualApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              RunOrder: 1

        - Name: Deploy
          Actions:
            - Name: CFN_Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts: [{ Name: BuildOutput }]
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: MyChangeSet
                StackName: ecs-service-stack
                TemplatePath: BuildOutput::ecs-service-template.yml

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: ecs-build-project
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
      ServiceRole: !GetAtt BuildRole.Arn

  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal: { Service: codebuild.amazonaws.com }
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess

Outputs:
  PipelineName:
    Value: !Ref Pipeline